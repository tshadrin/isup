version: '3'
services:
    isup-nginx:
        build:
            context: ./docker/development
            dockerfile: nginx.docker
        volumes:
            - ./:/app
        depends_on:
            - isup-php-fpm
        ports:
            - "8088:80"
    isup-php-fpm:
        build:
            context: ./docker/development
            dockerfile: php-fpm.docker
        environment:
            APP_DEBUG: 1
        volumes:
            - ./:/app
        depends_on:
            - isup-redis
            - isup-mysql
            - isup-mailer
            - centrifugo
    isup-php-cli:
        build:
            context: ./docker/development
            dockerfile: php-cli.docker
        environment:
            APP_DEBUG: 1
        volumes:
            - ./:/app
            - composer:/root/.composer/cache
        depends_on:
            - isup-redis
            - isup-mysql
            - isup-mailer
            - centrifugo
    isup-redis:
        image: redis:5.0-alpine
        volumes:
            - redis:/data
        command:
            - 'redis-server'
            - '--databases 2'
            - '--save 900 1'
            - '--'
    #isup-phpmyadmin:
    #    image: phpmyadmin/phpmyadmin
    #    ports:
    #        - "8090:80"
    #    environment:
    #        PMA_HOST: 10.3.7.18
    #        PMA_PORT: 3306
    #        PMA_ABSOLUTE_URI: /pmasup/
    #isup-phpmyadmin-sber-utm5:
    #    image: phpmyadmin/phpmyadmin
    #    ports:
    #        - "8091:80"
    #    environment:
    #        PMA_HOST: 10.3.7.42
    #        PMA_PORT: 3306
    #        PMA_PASSWORD: /pmasutm5/
    isup-node-watch:
        image: node:12.6-alpine
        volumes:
            - ./:/app
        working_dir: /app
        command: sh -c "until [ -f .ready ] ; do sleep 1 ; done && yarn encore dev --watch"
    isup-node:
        build:
            context: ./docker/development
            dockerfile: node.docker
        volumes:
            - ./:/app
        working_dir: /app
    isup-mysql:
        build:
            context: ./docker/development
            dockerfile: mysql.docker
        environment:
            MYSQL_ROOT_PASSWORD: root
            MYSQL_DATABASE: test
            MYSQL_USER: test
            MYSQL_PASSWORD: 123
        volumes:
            - mysql:/var/lib/mysql
    isup-mailer:
        image: mailhog/mailhog
        ports:
            - "8089:8025"
    centrifugo:
        image: centrifugo/centrifugo:v2.2
        ulimits:
            nofile:
                soft: 65536
                hard: 65536
        environment:
            CENTRIFUGO_SECRET: secret
            CENTRIFUGO_API_KEY: secret
        volumes:
            - ./centrifugo/docker/development/centrifugo:/centrifugo
        command: centrifugo --admin --admin_insecure
volumes:
    redis:
    composer:
    mysql: